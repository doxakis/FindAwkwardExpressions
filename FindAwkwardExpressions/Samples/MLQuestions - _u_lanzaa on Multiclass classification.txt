/u/lanzaa on Multiclass classification
I'm going to redefine some variables to make sure we are speaking the same language. Also I don't understand what k5 meant in your original post. So you have inputs,  [a1, a2, a3, a4]  Each of which is a feature vector:  a1 = [a1f1, a1f2, ..., a1fn] a2 = [a2f1, a2f2, ..., a2fn] ..., etc.  You are looking for an approximation to the function:  f(a1, a2, a3, a4) = [b1, b2, b3, b4]  Where each bx can be any of the output classes [k1, k2, k3, k4] ? Your current approach is to learn the functions:  f1(a1) = b1 f2(a2) = b2 f3(a3) = b3 f4(a4) = b4  However there is a relationship between b1,...,b4 that is lost in this representation. My approach would be to instead learn the functions:  f1(a1, a2, a3, a4) = b1 f2(a1, a2, a3, a4) = b2 f3(a1, a2, a3, a4) = b3 f3(a1, a2, a3, a4) = b4  This should be doable with decision trees. Since you mentioned ANN, you should be able to encode the entire problem in the ANN, ie:  f(a1, a2, a3, a4) = [b1, b2, b3, b4]  Should be learnable for an ANN. Instead of one softmax (or equivalent) at the end, you could use four.   