/u/shaggorama on How do we fit a linear regression classifier and plot its learning curve?
Basically every ML application can be boiled down into 2 components: a cost function (which essentially defines your "model") and an optimization procedure (which we will use to "fit" the model). The "learning curve" describes the progress of your optmization procedure as it works to "fit" the model. So first thing's first: you need to figure out what the linear regression cost function is. Generally, cost functions are measures of the "error" in our model, i.e. the distance between what our model predicts for a given input and the true value of the target observed for that input. Check your notes for functions associated with linear regression that discuss error and come back here when you think you've found it. Next is the optimization routine. There are several ways to go about this, but I strongly suspect your teacher wants you to use a particular algorithm. The purpose of the optimization is to find the inputs that minimize the cost function, i.e. the model parameters with the smallest prediction error. Check your notes for algorithms that can be used too perform minimization (or equivalently maximization) and come back here when you think you've got it.   