/u/5arToto on Software Engineering and Computer Science
A little bit of extra info: Somebody who studies computer science is interested in or works on things like machine learning, natural language processing, bioinformatics, genetic algorithms, computer vision... Somebody who studies software engineering is usually more focused how to build X, which technologies to use, how to combine them, how to structure the whole thing so that is as scalable and modular as possible, but covers all of the needed use cases and requirements, and isn't too expensive resource wise (with development time being the main resource in practice). A good example where these two overlap is Snapchat filters. A computer scientist needs to find a solution how to recognise a person's face, while a software engineer needs to find a way to integrate that into the existing app. Something that they both need to keep in mind is that more filters will be added over time so the solution needs to be as generic as possible, and that an average smartphone can't do heavy computation so the solution needs to be good enough for the user experience but not perfect.   